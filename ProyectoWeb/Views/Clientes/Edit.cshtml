@model PruebaPFC.ViewModels.ClienteViewModel

@{
    ViewBag.Title = "Editar Cliente";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h3>Editar Cliente</h3>

@using (Html.BeginForm("Save", "Clientes", FormMethod.Post, new { id = "frmCliente" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.cliente.ClienteId)

        <div class="form-group">
            @Html.LabelFor(model => model.cliente.Nombre, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.cliente.Nombre, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.cliente.Nombre, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.cliente.Direccion, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.cliente.Direccion, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.cliente.Direccion, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.cliente.Telefono, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.cliente.Telefono, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.cliente.Telefono, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.cliente.FechaNac, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.cliente.FechaNac, new { htmlAttributes = new { @class = "form-control date-picker", @readonly = "readonly", @Style = "background:#fff;" } })
                @Html.ValidationMessageFor(model => model.cliente.FechaNac, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.cliente.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.cliente.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.cliente.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <button type="submit" class="btn btn-primary">Guardar</button>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Regresar al listado de Clientes", "Index")
</div>

@section scripts
{
    @Scripts.Render("~/bundles/jqueryval");
    @Scripts.Render("~/Scripts/jquery.mask.js");
    @Scripts.Render("~/Scripts/CustomScripts/CustomValidations.js");


    <script>
            $("#cliente_Telefono").mask("9999-9999");
    </script>

}
